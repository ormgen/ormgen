//################################################################
//################################################################
//#### OBS: This file is generated, do not modify it manually ####
//################################################################
//################################################################
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum ORDER_STATUS {
  ORDERED
  SHIPPED
}

enum GLOBAL_ENUM {
  A
  B
  C
}

model Order {
  uid        String       @id
  status     ORDER_STATUS
  orderDate  DateTime
  totalPrice Int          @default(0)
  userUid    String
  user       User         @relation(fields: [userUid], references: [uid], onDelete: Restrict)
  orderItems OrderItem[]
}

model OrderItem {
  uid        String  @id
  orderUid   String
  order      Order   @relation(fields: [orderUid], references: [uid], onDelete: Cascade)
  productUid String
  product    Product @relation(fields: [productUid], references: [uid], onDelete: Restrict)
  quantity   Int
}

model Product {
  uid           String                     @id
  name          String
  description   String
  price         Int
  stockQuantity Int
  sku           String                     @unique
  attributes    Json                       @default("{\"test\":true}")
  createdAt     DateTime
  orderItems    OrderItem[]
  onCategories  ProductCategoryOnProduct[]

  @@unique(name: "nameAndSku", [name, sku])
}

model ProductCategory {
  uid         String                     @id
  name        String                     @unique
  description String
  onProducts  ProductCategoryOnProduct[]
}

model ProductCategoryOnProduct {
  productUid         String
  product            Product         @relation(fields: [productUid], references: [uid], onDelete: Cascade)
  productCategoryUid String
  productCategory    ProductCategory @relation(fields: [productCategoryUid], references: [uid], onDelete: Cascade)

  @@id(name: "productAndCategory", [productUid, productCategoryUid])
}

model Review {
  uid           String                @id
  rating        Int
  comment       String
  commentVector Unsupported("vector")
  createdAt     DateTime
  userUid       String
  user          User                  @relation(fields: [userUid], references: [uid], onDelete: Cascade)
}

model User {
  uid          String   @id
  email        String   @unique
  name         String
  passwordHash String
  lastLogin    DateTime
  createdAt    DateTime
  updatedAt    DateTime
  orders       Order[]
  reviews      Review[]
}
